package com.clarityforandroid.controllers;

import com.caverock.androidsvg.SVG;
import com.caverock.androidsvg.SVGParseException;
import com.clarityforandroid.R;
import com.clarityforandroid.helpers.Clarity_DialogFactory;
import com.clarityforandroid.helpers.ZXing_IntentIntegrator;
import com.clarityforandroid.helpers.ZXing_IntentResult;
import com.clarityforandroid.models.Clarity_PatientModel;
import com.clarityforandroid.models.Clarity_ProviderModel;
import com.clarityforandroid.views.Clarity_CurrentUserView;

import android.app.Activity;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.PictureDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.ImageView;

/**
 * The activity where you take a picture of the client.
 * 
 * @author Jonathan Ballands
 * @version 1.0
 */
public class Clarity_CAPQRScan extends Activity {

	Clarity_ProviderModel provider;
	Clarity_PatientModel patient;

	Clarity_CurrentUserView bar;
	
	// ImageView tutorial;
	ImageView stepThreeImageView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// Get bundles
		provider = new Clarity_ProviderModel();
		patient = new Clarity_PatientModel();
		Intent incomingIntent = this.getIntent();
		if (incomingIntent != null) {
			patient = incomingIntent.getExtras().getParcelable("patient_model");
			provider = incomingIntent.getExtras().getParcelable("provider_model");
		}

		// Set up views
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.setContentView(R.layout.activity_cap_qr_link);
		bar = (Clarity_CurrentUserView)(findViewById(R.id.currentUserView));
		bar.initializeWithModel(provider);
		
		// Do SVG shit
		stepThreeImageView = (ImageView)findViewById(R.id.stepThree);
		stepThreeImageView.setLayerType(View.LAYER_TYPE_SOFTWARE, null);

		// Try to create the SVG
		try {
			SVG svg = SVG.getFromResource(this, R.drawable.stepthree);
			Drawable drawable = new PictureDrawable(svg.renderToPicture());
			stepThreeImageView.setImageDrawable(drawable);
		} catch (SVGParseException e) {
			Log.wtf("CAPDemoActivity",
					"The SVG couldn't be loaded... for some reason");
		}
		
		// Set listeners
		findViewById(R.id.start_link_button).setOnClickListener(new ScanOnClickListener());
	}
	
	/**
	 * The listener that listens for the scan button.
	 * 
	 * @author Jonathan Ballands
	 * @version 1.0
	 */
	private class ScanOnClickListener implements OnClickListener {

		@Override
		public void onClick(View v) {
			
			// If on emulator, emulate a QR code scan
			// DEBUG
			/*if (android.os.Build.MODEL.contains("sdk")) {
				
				Toast.makeText(Clarity_CAPQRScan.this, "Clarity QR code injected", Toast.LENGTH_SHORT).show();
				patient.setTicket("clarity" + java.util.UUID.randomUUID().toString());
				
				// Start activity
	            Intent intent = new Intent(Clarity_CAPQRScan.this, Clarity_CAPOverview.class);
	            intent.putExtra("provider_model", provider);
	            intent.putExtra("patient_model", patient);
	            startActivity(intent);
	            return;
			}*/
			
			// No debug
			ZXing_IntentIntegrator integrator = new ZXing_IntentIntegrator(Clarity_CAPQRScan.this);
			integrator.initiateScan();
		}
	}
	
	/**
	 * The callback that gets called when the scanner comes back.
	 * 
	 * @param requestCode The request code so that you may determine
	 * what dispatched the request.
	 * @param resultCode The result code so that you may determine if there
	 * was a problem.
	 * @param data The data that came back from the intent.
	 */
	protected void onActivityResult(int requestCode, int resultCode,
            Intent data) {
		ZXing_IntentResult scanResult = ZXing_IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
		// Normally, you'd check the request code to see where the request came from.
		// We know this must come for the scan so we won't check that.
		if (resultCode == RESULT_OK && scanResult != null) {
			
			// Get something out of the qr code
			String encoding = scanResult.getContents();
			
			// Valid clarity QR code?
			if (encoding.startsWith("clarity")) {
				
				// Valid
				patient.setTicket(encoding);
				
				// Start activity
	            Intent intent = new Intent(Clarity_CAPQRScan.this, Clarity_CAPOverview.class);
	            intent.putExtra("provider_model", provider);
	            intent.putExtra("patient_model", patient);
	            startActivity(intent);
			}
			else {
				
				// Invalid
				Clarity_DialogFactory.displayNewErrorDialog(this, getString(R.string.bad_qr_title), getString(R.string.bad_qr_message));
			}
        }
    }
}
